@model WebApp.Models.UserViewModel

<div class="row">
    <div class="col-sm">
        <div class="form-group">

            <label asp-for="UserName"></label>  <label> *</label>
            <input type="text" asp-for="UserName"
                   class="form-control" id="txtUserName"
                   placeholder="Enter User Name">
            <span asp-validation-for="UserName" class="text-danger small pl-2"></span>
        </div>
    </div>
    <div class="col-sm">
        <div class="form-group">

            <label asp-for="UserId"></label>

            @Html.HiddenFor(x => x.ConnectionId, new { @id = "txtHdnConnectionId" })
            @Html.HiddenFor(x => x.UserId, new { @id = "hdnUserId" })
            <input disabled="disabled" type="text" asp-for="UserId"
                   class="form-control" id="txtUserId"
                   placeholder="Enter User Id">
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm">
        <div class="form-group">
            <label asp-for="FirstName"></label>  <label> *</label>
            <input type="text" asp-for="FirstName"
                   class="form-control" id="txtFirstName"
                   placeholder="Enter First Name">
            <span asp-validation-for="FirstName" class="text-danger small pl-2"></span>
        </div>
    </div>
    <div class="col-sm">
        <div class="form-group">
            <label asp-for="LastName">Last Name</label> <label> *</label>
            <input type="text" asp-for="LastName"
                   class="form-control" id="txtLastName"
                   placeholder="Enter Last Name">
            <span asp-validation-for="LastName" class="text-danger small pl-2"></span>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm">
        <div class="form-group">
            <label for="MiddleName"> Middle Name</label>
            <input type="text" asp-for="MiddleName"
                   class="form-control" id="txtMiddleName"
                   placeholder="Enter Middle Name">
        </div>
    </div>
    <div class="col-sm">

    </div>
</div>

<script>
    $('#modalLoadingIcon').modal('hide');

    setTimeout(
        function () {
            $('#txtHdnConnectionId').val($('#signalRconnectionId').val());
        }, 300);

    function editUserOnBegin() {
        $('#modalProgressBar').modal('show');
    };

    function editUserOnComplete(xhr) {
        
    };

    function editUserOnSuccess(data, status, xhr) {
        new MvcGrid(document.querySelector('#gridGetsUsersAjax')).reload();
        $('#modalEditUser').modal('hide');  

        setTimeout(
            function () {
                $('#modalProgressBar').modal('hide');
            }, 500);

        if (jQuery.type(data.Status) === "undefined") {

        }
        else {

            swalWithBootstrapButtons.fire({
                title: data.GetGoodJobVerb,
                text: data.Message,
                type: 'success',
                showCancelButton: false,
                confirmButtonText: '<i class="fas fa-check"></i> Ok'
            });
        }
    };

    function editUserOnFailure(XMLHttpRequest, textStatus, errorThrown) {
        new MvcGrid(document.querySelector('#gridGetsUsersAjax')).reload();

        $('#modalEditUser').modal('hide');

        swalWithBootstrapButtons.fire({
            title: 'Oops...',
            text: "An error occurred while processing your request",
            type: 'error',
            html: '<br> <br>  An error occurred while processing your request. <br> <br> <br> ' +
                '<div style="text-align: center; font-size : 14px;" >   Error Message: ' + XMLHttpRequest.status + " " + errorThrown +
                '<br> <br> ' + ' Request Id : ' + XMLHttpRequest.getResponseHeader('RequestId') + ' </div>',
            showCancelButton: false,
            confirmButtonText: '<i class="fas fa-check"></i> Ok'
        });

        setTimeout(
            function () {
                $('#modalProgressBar').modal('hide');
            }, 500);
    };
</script>